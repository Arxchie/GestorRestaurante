/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package interfaces;

import cjb.ci.CtrlInterfaz;
import dao.EmpleadoDAO;
import java.awt.Image;
import java.awt.Toolkit;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.Empleado;

/**
 *
 * @author chemo
 */
public class VtnMostrarEmpleados extends javax.swing.JFrame
{

    /**
     * Creates new form VtnMostrarEmpleados
     */
    public VtnMostrarEmpleados()
    {
        initComponents();

        jTextField1.getDocument().addDocumentListener(new javax.swing.event.DocumentListener()
        {
            @Override
            public void insertUpdate(javax.swing.event.DocumentEvent e)
            {
                filtrarEmpleados();
            }

            @Override
            public void removeUpdate(javax.swing.event.DocumentEvent e)
            {
                filtrarEmpleados();
            }

            @Override
            public void changedUpdate(javax.swing.event.DocumentEvent e)
            {
                filtrarEmpleados();
            }
        });
        setIconImage(getIconImage());

    }
    
    public Image getIconImage()
    {
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("imagenes/Logo.png"));
        return retValue;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        actNombre = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        actDireccion = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        actTelefono = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        actSueldo = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaEmpleados = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Restaurant Esencia y Saz√≥n");
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter()
        {
            public void windowOpened(java.awt.event.WindowEvent evt)
            {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Century Gothic", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("BUSCAR");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 10, -1, -1));

        jTextField1.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jPanel1.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 60, 630, -1));

        jLabel5.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("MODIFICAR");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 20, -1, -1));

        jLabel2.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Nombre:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 90, -1, -1));

        actNombre.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jPanel1.add(actNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 90, 210, -1));

        jLabel3.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Direccion:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 150, -1, -1));

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        actDireccion.setColumns(20);
        actDireccion.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        actDireccion.setRows(5);
        jScrollPane2.setViewportView(actDireccion);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 180, 300, 100));

        jLabel4.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Telefono:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 310, -1, -1));

        actTelefono.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jPanel1.add(actTelefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 310, 210, -1));

        jLabel6.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Sueldo:");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 360, -1, -1));

        actSueldo.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jPanel1.add(actSueldo, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 360, 220, -1));

        jButton1.setBackground(new java.awt.Color(207, 181, 59));
        jButton1.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("ACTUALIZAR");
        jButton1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 420, -1, -1));

        jButton2.setBackground(new java.awt.Color(255, 153, 153));
        jButton2.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("LIMPIAR");
        jButton2.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 420, 120, -1));

        jScrollPane3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane3.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane3.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N

        tablaEmpleados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {
                "Codigo", "Nombre", "Direccion", "Telefono", "Sueldo"
            }
        )
        {
            boolean[] canEdit = new boolean []
            {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex)
            {
                return canEdit [columnIndex];
            }
        });
        tablaEmpleados.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                tablaEmpleadosMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tablaEmpleados);

        jPanel1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 110, 810, 370));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/mas.png"))); // NOI18N
        jLabel7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                jLabel7MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, -1, -1));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/bote-de-basura.png"))); // NOI18N
        jLabel8.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                jLabel8MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 50, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1150, 480));

        jMenu1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/boton rojo.png"))); // NOI18N
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                jMenu1MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu1);

        jMenu2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/boton amarillo.png"))); // NOI18N
        jMenu2.setToolTipText("");
        jMenu2.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                jMenu2MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu2);

        jMenu3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/boton verde.png"))); // NOI18N
        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt)//GEN-FIRST:event_formWindowOpened
    {//GEN-HEADEREND:event_formWindowOpened
        llenarTablaEmpleados();
    }//GEN-LAST:event_formWindowOpened

    private void jMenu1MouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_jMenu1MouseClicked
    {//GEN-HEADEREND:event_jMenu1MouseClicked
        dispose();
    }//GEN-LAST:event_jMenu1MouseClicked

    private void jMenu2MouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_jMenu2MouseClicked
    {//GEN-HEADEREND:event_jMenu2MouseClicked
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_jMenu2MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton2ActionPerformed
    {//GEN-HEADEREND:event_jButton2ActionPerformed
        CtrlInterfaz.limpia(actNombre, actDireccion, actTelefono, actSueldo);
        llenarTablaEmpleados();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void tablaEmpleadosMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_tablaEmpleadosMouseClicked
    {//GEN-HEADEREND:event_tablaEmpleadosMouseClicked
        int filaSeleccionada = tablaEmpleados.getSelectedRow();
        if (filaSeleccionada != -1)
        {
            DefaultTableModel modeloTabla = (DefaultTableModel) tablaEmpleados.getModel();

            long id = (long) modeloTabla.getValueAt(filaSeleccionada, 0);
            String nombre = (String) modeloTabla.getValueAt(filaSeleccionada, 1);
            String direccion = (String) modeloTabla.getValueAt(filaSeleccionada, 2);
            String telefono = (String) modeloTabla.getValueAt(filaSeleccionada, 3);
            double sueldo = (double) modeloTabla.getValueAt(filaSeleccionada, 4);

            actNombre.setText(nombre);
            actDireccion.setText(direccion);
            actTelefono.setText(telefono);
            actSueldo.setText(String.valueOf(sueldo));
        }
    }//GEN-LAST:event_tablaEmpleadosMouseClicked

    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_jLabel7MouseClicked
    {//GEN-HEADEREND:event_jLabel7MouseClicked
        new VtnAltaEmpleados().setVisible(true);
    }//GEN-LAST:event_jLabel7MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton1ActionPerformed
    {//GEN-HEADEREND:event_jButton1ActionPerformed
        int filaSeleccionada = tablaEmpleados.getSelectedRow();
        if (filaSeleccionada == -1)
        {
            JOptionPane.showMessageDialog(this, "Debe seleccionar un empleado para actualizar.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        DefaultTableModel modeloTabla = (DefaultTableModel) tablaEmpleados.getModel();
        long codigo = (long) modeloTabla.getValueAt(filaSeleccionada, 0);

        String nuevoNombre = actNombre.getText();
        String nuevaDireccion = actDireccion.getText();
        String nuevoTelefono = actTelefono.getText();

        if (!nuevoTelefono.matches("\\d{10}"))
        {
            JOptionPane.showMessageDialog(this, "El tel√©fono debe ser num√©rico y contener exactamente 10 d√≠gitos.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        double nuevoSueldo;
        try
        {
            nuevoSueldo = Double.parseDouble(actSueldo.getText());
        } catch (NumberFormatException e)
        {
            JOptionPane.showMessageDialog(this, "El sueldo debe ser un valor num√©rico.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        EmpleadoDAO empleadoDAO = new EmpleadoDAO();
        Empleado empleadoActualizado = new Empleado();
        empleadoActualizado.setId(codigo);
        empleadoActualizado.setNombre(nuevoNombre);
        empleadoActualizado.setDireccion(nuevaDireccion);
        empleadoActualizado.setTelefono(nuevoTelefono);
        empleadoActualizado.setSueldo(nuevoSueldo);

        boolean exito = empleadoDAO.modificarEmpleado(empleadoActualizado);

        if (exito)
        {
            JOptionPane.showMessageDialog(this, "Empleado actualizado correctamente.", "√âxito", JOptionPane.INFORMATION_MESSAGE);
            llenarTablaEmpleados();
        } else
        {
            JOptionPane.showMessageDialog(this, "Error al actualizar el empleado.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jLabel8MouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_jLabel8MouseClicked
    {//GEN-HEADEREND:event_jLabel8MouseClicked
        int filaSeleccionada = tablaEmpleados.getSelectedRow();

        if (filaSeleccionada == -1)
        {
            JOptionPane.showMessageDialog(this, "Debe seleccionar un empleado para eliminar.", "Error", JOptionPane.ERROR_MESSAGE);
        } else
        {
            int confirmacion = JOptionPane.showConfirmDialog(
                    this,
                    "¬øEst√° seguro de que desea eliminar el empleado seleccionado?",
                    "Confirmaci√≥n",
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE
            );

            if (confirmacion == JOptionPane.YES_OPTION)
            {
                DefaultTableModel modeloTabla = (DefaultTableModel) tablaEmpleados.getModel();
                long codigoEmpleado = (long) modeloTabla.getValueAt(filaSeleccionada, 0);

                EmpleadoDAO empleadoDAO = new EmpleadoDAO();
                boolean exito = empleadoDAO.eliminarEmpleado(codigoEmpleado);

                if (exito)
                {
                    llenarTablaEmpleados();
                    JOptionPane.showMessageDialog(this, "Empleado eliminado correctamente.", "√âxito", JOptionPane.INFORMATION_MESSAGE);
                } else
                {
                    JOptionPane.showMessageDialog(this, "Error al eliminar el empleado.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_jLabel8MouseClicked

    public void filtrarEmpleados()
    {
        String textoBusqueda = jTextField1.getText().trim().toLowerCase(); 
        DefaultTableModel modeloTabla = (DefaultTableModel) tablaEmpleados.getModel(); 

        modeloTabla.setRowCount(0); 

        EmpleadoDAO empleadoDAO = new EmpleadoDAO();
        List<Empleado> empleados = empleadoDAO.obtenerListaEmpleados(); 

        for (Empleado empleado : empleados)
        {
            if (empleado.getNombre().toLowerCase().contains(textoBusqueda)) 
            {
                Object[] fila =
                {
                    empleado.getId(),
                    empleado.getNombre(),
                    empleado.getDireccion(),
                    empleado.getTelefono(),
                    empleado.getSueldo()
                };
                modeloTabla.addRow(fila); 
            }
        }
    }

    public void llenarTablaEmpleados()
    {
        DefaultTableModel modeloTabla = (DefaultTableModel) tablaEmpleados.getModel();

        modeloTabla.setRowCount(0);

        EmpleadoDAO empleadoDAO = new EmpleadoDAO();
        List<Empleado> empleados = empleadoDAO.obtenerListaEmpleados();

        for (Empleado empleado : empleados)
        {
            Object[] fila =
            {
                empleado.getId(),
                empleado.getNombre(),
                empleado.getDireccion(),
                empleado.getTelefono(),
                empleado.getSueldo()
            };
            modeloTabla.addRow(fila);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(VtnMostrarEmpleados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(VtnMostrarEmpleados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(VtnMostrarEmpleados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(VtnMostrarEmpleados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new VtnMostrarEmpleados().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea actDireccion;
    private javax.swing.JTextField actNombre;
    private javax.swing.JTextField actSueldo;
    private javax.swing.JTextField actTelefono;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTable tablaEmpleados;
    // End of variables declaration//GEN-END:variables
}
